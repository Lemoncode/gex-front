/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../scenes/__root';
import { Route as LoginImport } from './../../scenes/login';
import { Route as AuthImport } from './../../scenes/_auth';
import { Route as IndexImport } from './../../scenes/index';
import { Route as AuthUsersIndexImport } from './../../scenes/_auth/users/index';
import { Route as AuthRecordsIndexImport } from './../../scenes/_auth/records/index';
import { Route as AuthExpedientesIndexImport } from './../../scenes/_auth/expedientes/index';
import { Route as AuthCreateUserIndexImport } from './../../scenes/_auth/create-user/index';
import { Route as AuthUsersIdImport } from './../../scenes/_auth/users/$id';
import { Route as AuthEditarExpedienteIdImport } from './../../scenes/_auth/editar-expediente/$id';
import { Route as AuthEditUserIdImport } from './../../scenes/_auth/edit-user/$id';

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any);

const AuthRecordsIndexRoute = AuthRecordsIndexImport.update({
  id: '/records/',
  path: '/records/',
  getParentRoute: () => AuthRoute,
} as any);

const AuthExpedientesIndexRoute = AuthExpedientesIndexImport.update({
  id: '/expedientes/',
  path: '/expedientes/',
  getParentRoute: () => AuthRoute,
} as any);

const AuthCreateUserIndexRoute = AuthCreateUserIndexImport.update({
  id: '/create-user/',
  path: '/create-user/',
  getParentRoute: () => AuthRoute,
} as any);

const AuthUsersIdRoute = AuthUsersIdImport.update({
  id: '/users/$id',
  path: '/users/$id',
  getParentRoute: () => AuthRoute,
} as any);

const AuthEditarExpedienteIdRoute = AuthEditarExpedienteIdImport.update({
  id: '/editar-expediente/$id',
  path: '/editar-expediente/$id',
  getParentRoute: () => AuthRoute,
} as any);

const AuthEditUserIdRoute = AuthEditUserIdImport.update({
  id: '/edit-user/$id',
  path: '/edit-user/$id',
  getParentRoute: () => AuthRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth': {
      id: '/_auth';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth/edit-user/$id': {
      id: '/_auth/edit-user/$id';
      path: '/edit-user/$id';
      fullPath: '/edit-user/$id';
      preLoaderRoute: typeof AuthEditUserIdImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/editar-expediente/$id': {
      id: '/_auth/editar-expediente/$id';
      path: '/editar-expediente/$id';
      fullPath: '/editar-expediente/$id';
      preLoaderRoute: typeof AuthEditarExpedienteIdImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/users/$id': {
      id: '/_auth/users/$id';
      path: '/users/$id';
      fullPath: '/users/$id';
      preLoaderRoute: typeof AuthUsersIdImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/create-user/': {
      id: '/_auth/create-user/';
      path: '/create-user';
      fullPath: '/create-user';
      preLoaderRoute: typeof AuthCreateUserIndexImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/expedientes/': {
      id: '/_auth/expedientes/';
      path: '/expedientes';
      fullPath: '/expedientes';
      preLoaderRoute: typeof AuthExpedientesIndexImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/records/': {
      id: '/_auth/records/';
      path: '/records';
      fullPath: '/records';
      preLoaderRoute: typeof AuthRecordsIndexImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/users/': {
      id: '/_auth/users/';
      path: '/users';
      fullPath: '/users';
      preLoaderRoute: typeof AuthUsersIndexImport;
      parentRoute: typeof AuthImport;
    };
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthEditUserIdRoute: typeof AuthEditUserIdRoute;
  AuthEditarExpedienteIdRoute: typeof AuthEditarExpedienteIdRoute;
  AuthUsersIdRoute: typeof AuthUsersIdRoute;
  AuthCreateUserIndexRoute: typeof AuthCreateUserIndexRoute;
  AuthExpedientesIndexRoute: typeof AuthExpedientesIndexRoute;
  AuthRecordsIndexRoute: typeof AuthRecordsIndexRoute;
  AuthUsersIndexRoute: typeof AuthUsersIndexRoute;
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthEditUserIdRoute: AuthEditUserIdRoute,
  AuthEditarExpedienteIdRoute: AuthEditarExpedienteIdRoute,
  AuthUsersIdRoute: AuthUsersIdRoute,
  AuthCreateUserIndexRoute: AuthCreateUserIndexRoute,
  AuthExpedientesIndexRoute: AuthExpedientesIndexRoute,
  AuthRecordsIndexRoute: AuthRecordsIndexRoute,
  AuthUsersIndexRoute: AuthUsersIndexRoute,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '': typeof AuthRouteWithChildren;
  '/login': typeof LoginRoute;
  '/edit-user/$id': typeof AuthEditUserIdRoute;
  '/editar-expediente/$id': typeof AuthEditarExpedienteIdRoute;
  '/users/$id': typeof AuthUsersIdRoute;
  '/create-user': typeof AuthCreateUserIndexRoute;
  '/expedientes': typeof AuthExpedientesIndexRoute;
  '/records': typeof AuthRecordsIndexRoute;
  '/users': typeof AuthUsersIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '': typeof AuthRouteWithChildren;
  '/login': typeof LoginRoute;
  '/edit-user/$id': typeof AuthEditUserIdRoute;
  '/editar-expediente/$id': typeof AuthEditarExpedienteIdRoute;
  '/users/$id': typeof AuthUsersIdRoute;
  '/create-user': typeof AuthCreateUserIndexRoute;
  '/expedientes': typeof AuthExpedientesIndexRoute;
  '/records': typeof AuthRecordsIndexRoute;
  '/users': typeof AuthUsersIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/_auth': typeof AuthRouteWithChildren;
  '/login': typeof LoginRoute;
  '/_auth/edit-user/$id': typeof AuthEditUserIdRoute;
  '/_auth/editar-expediente/$id': typeof AuthEditarExpedienteIdRoute;
  '/_auth/users/$id': typeof AuthUsersIdRoute;
  '/_auth/create-user/': typeof AuthCreateUserIndexRoute;
  '/_auth/expedientes/': typeof AuthExpedientesIndexRoute;
  '/_auth/records/': typeof AuthRecordsIndexRoute;
  '/_auth/users/': typeof AuthUsersIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/edit-user/$id'
    | '/editar-expediente/$id'
    | '/users/$id'
    | '/create-user'
    | '/expedientes'
    | '/records'
    | '/users';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | ''
    | '/login'
    | '/edit-user/$id'
    | '/editar-expediente/$id'
    | '/users/$id'
    | '/create-user'
    | '/expedientes'
    | '/records'
    | '/users';
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/edit-user/$id'
    | '/_auth/editar-expediente/$id'
    | '/_auth/users/$id'
    | '/_auth/create-user/'
    | '/_auth/expedientes/'
    | '/_auth/records/'
    | '/_auth/users/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthRoute: typeof AuthRouteWithChildren;
  LoginRoute: typeof LoginRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/edit-user/$id",
        "/_auth/editar-expediente/$id",
        "/_auth/users/$id",
        "/_auth/create-user/",
        "/_auth/expedientes/",
        "/_auth/records/",
        "/_auth/users/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/edit-user/$id": {
      "filePath": "_auth/edit-user/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/editar-expediente/$id": {
      "filePath": "_auth/editar-expediente/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$id": {
      "filePath": "_auth/users/$id.tsx",
      "parent": "/_auth"
    },
    "/_auth/create-user/": {
      "filePath": "_auth/create-user/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/expedientes/": {
      "filePath": "_auth/expedientes/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/records/": {
      "filePath": "_auth/records/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
